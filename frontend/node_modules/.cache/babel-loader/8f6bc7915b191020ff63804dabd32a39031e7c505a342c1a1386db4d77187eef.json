{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maali\\\\OneDrive\\\\Desktop\\\\MUSIC\\\\frontend\\\\src\\\\components\\\\CommentOverlay.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst overlayStyle = {\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  width: '100vw',\n  height: '100vh',\n  background: 'rgba(0,0,0,0.3)',\n  zIndex: 2000,\n  display: 'flex',\n  justifyContent: 'flex-end'\n};\nconst drawerStyle = {\n  width: 'min(400px, 100vw)',\n  maxWidth: '100vw',\n  height: '100vh',\n  background: '#181818',\n  boxShadow: '-2px 0 16px rgba(0,0,0,0.2)',\n  display: 'flex',\n  flexDirection: 'column',\n  position: 'relative',\n  animation: 'slideInRight 0.2s'\n};\nconst headerStyle = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  padding: '1rem',\n  borderBottom: '1px solid #222',\n  background: '#222'\n};\nconst commentsListStyle = {\n  flex: 1,\n  overflowY: 'auto',\n  padding: '1rem',\n  color: 'white'\n};\nconst inputSectionStyle = {\n  borderTop: '1px solid #222',\n  padding: '1rem',\n  background: '#222',\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '0.5rem'\n};\nconst closeBtnStyle = {\n  background: 'none',\n  border: 'none',\n  color: '#fff',\n  fontSize: '1.5rem',\n  cursor: 'pointer'\n};\nconst replyInputStyle = {\n  width: '100%',\n  minHeight: '40px',\n  borderRadius: '6px',\n  padding: '0.3rem',\n  border: '1px solid #444',\n  background: '#222',\n  color: 'white',\n  marginTop: '0.3rem',\n  marginBottom: '0.3rem'\n};\nfunction CommentOverlay({\n  open,\n  onClose,\n  track\n}) {\n  _s();\n  var _commentsByParent$roo;\n  const drawerRef = useRef();\n  const [comments, setComments] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [newComment, setNewComment] = useState('');\n  const [replyInputs, setReplyInputs] = useState({}); // {commentId: replyText}\n  const [replying, setReplying] = useState({}); // {commentId: bool}\n  const [openReplies, setOpenReplies] = useState({}); // {commentId: true/false}\n  const [showReplyInput, setShowReplyInput] = useState({}); // {commentId: bool}\n  const replyInputRefs = useRef({});\n  const [activeReplyInputId, setActiveReplyInputId] = useState(null); // ID of comment or reply being replied to\n\n  // Fetch all comments for a track as a flat array\n  const fetchComments = async () => {\n    if (!(track !== null && track !== void 0 && track._id)) return;\n    setLoading(true);\n    try {\n      const res = await axios.get(`http://localhost:5000/api/comments/track/${track._id}/comments-flat`);\n      setComments(res.data.comments || []);\n    } catch {\n      setComments([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (!open || !(track !== null && track !== void 0 && track._id)) return;\n    fetchComments();\n    setOpenReplies({}); // Hide all replies by default when overlay opens or track changes\n  }, [open, track]);\n\n  // Add a new top-level comment\n  const handleAddComment = async () => {\n    if (!newComment.trim()) return;\n    setLoading(true);\n    try {\n      const token = localStorage.getItem('token');\n      await axios.post(`http://localhost:5000/api/comments/track/${track._id}/add`, {\n        text: newComment.trim()\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setNewComment('');\n      await fetchComments(); // Re-fetch all comments from backend\n    } catch (err) {\n      var _err$response, _err$response$data;\n      alert(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Error adding comment');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Add a reply to a comment (always to top-level comment)\n  const handleAddReply = async (commentId, parentId = null) => {\n    var _replyInputs$commentI;\n    // commentId: where the input is shown (could be parent or reply id)\n    // parentId: the top-level comment id to attach the reply to\n    const replyText = (_replyInputs$commentI = replyInputs[commentId]) === null || _replyInputs$commentI === void 0 ? void 0 : _replyInputs$commentI.trim();\n    if (!replyText) return;\n    setReplying(r => ({\n      ...r,\n      [commentId]: true\n    }));\n    try {\n      const token = localStorage.getItem('token');\n      await axios.post(`http://localhost:5000/api/comments/comment/${parentId || commentId}/reply`, {\n        trackId: track._id,\n        text: replyText\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setReplyInputs(i => ({\n        ...i,\n        [commentId]: ''\n      }));\n      setActiveReplyInputId(null); // Hide input after reply\n      await fetchComments(); // Refresh comments\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      alert(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Error adding reply');\n    } finally {\n      setReplying(r => ({\n        ...r,\n        [commentId]: false\n      }));\n    }\n  };\n\n  // New: handle reply to a top-level comment (pre-fill @ParentUserName)\n  const handleReplyToComment = (commentId, parentUserName) => {\n    setReplyInputs(inputs => {\n      var _inputs$commentId;\n      return {\n        ...inputs,\n        [commentId]: (_inputs$commentId = inputs[commentId]) !== null && _inputs$commentId !== void 0 && _inputs$commentId.startsWith(`@${parentUserName} `) ? inputs[commentId] : `@${parentUserName} `\n      };\n    });\n    setActiveReplyInputId(currentId => {\n      if (currentId === commentId) return null; // Toggle off if already open\n      setTimeout(() => {\n        const input = replyInputRefs.current[commentId];\n        if (input) {\n          input.focus();\n          const val = input.value;\n          input.setSelectionRange(val.length, val.length);\n        }\n      }, 0);\n      return commentId;\n    });\n  };\n\n  // New: handle reply to a reply (pre-fill @username in the parent comment's reply input)\n  const handleReplyToReply = (parentCommentId, replyId, replyUserName) => {\n    setReplyInputs(inputs => {\n      var _inputs$replyId;\n      return {\n        ...inputs,\n        [replyId]: (_inputs$replyId = inputs[replyId]) !== null && _inputs$replyId !== void 0 && _inputs$replyId.startsWith(`@${replyUserName} `) ? inputs[replyId] : `@${replyUserName} `\n      };\n    });\n    setActiveReplyInputId(currentId => {\n      if (currentId === replyId) return null; // Toggle off if already open\n      setTimeout(() => {\n        const input = replyInputRefs.current[replyId];\n        if (input) {\n          input.focus();\n          const val = input.value;\n          input.setSelectionRange(val.length, val.length);\n        }\n      }, 0);\n      return replyId;\n    });\n  };\n\n  // Toggle replies for a comment\n  const handleToggleReplies = async commentId => {\n    setOpenReplies(prev => ({\n      ...prev,\n      [commentId]: !prev[commentId]\n    }));\n  };\n\n  // Helper: Render reply text with styled @username if present\n  function renderReplyText(text) {\n    const match = text.match(/^@(\\S+)\\s(.*)$/);\n    if (match) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#1e90ff',\n            fontWeight: 500\n          },\n          children: `@${match[1]}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), ' ', match[2]]\n      }, void 0, true);\n    }\n    return text;\n  }\n\n  // Group comments by parentId\n  const commentsByParent = {};\n  comments.forEach(c => {\n    const pid = c.parent || 'root';\n    if (!commentsByParent[pid]) commentsByParent[pid] = [];\n    commentsByParent[pid].push(c);\n  });\n\n  // Helper: Render replies to a comment (all descendants of a reply at same indentation)\n  function renderReplies(parentId, parentUserName, level = 1) {\n    const replies = commentsByParent[parentId] || [];\n    if (level > 2) return null; // Only two levels of indentation\n    return replies.map(reply => {\n      var _reply$user, _reply$user3;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: level === 1 ? '1.2rem' : '2.4rem',\n          marginTop: '0.5rem',\n          marginBottom: '0.7rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          style: {\n            color: '#1db954'\n          },\n          children: ((_reply$user = reply.user) === null || _reply$user === void 0 ? void 0 : _reply$user.name) || 'User'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: '#fff'\n          },\n          children: renderReplyText(reply.text)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            background: 'none',\n            color: '#1e90ff',\n            border: 'none',\n            cursor: 'pointer',\n            fontSize: '0.92em',\n            marginLeft: '0.5rem'\n          },\n          onClick: () => {\n            var _reply$user2;\n            return handleReplyToReply(parentId, reply._id, ((_reply$user2 = reply.user) === null || _reply$user2 === void 0 ? void 0 : _reply$user2.name) || 'User');\n          },\n          children: \"Reply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 9\n        }, this), activeReplyInputId === reply._id && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: '1.2rem',\n            marginTop: '0.5rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            ref: el => replyInputRefs.current[reply._id] = el,\n            style: replyInputStyle,\n            placeholder: \"Write a reply...\",\n            value: replyInputs[reply._id] || '',\n            onChange: e => setReplyInputs(i => ({\n              ...i,\n              [reply._id]: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              background: '#1db954',\n              color: 'white',\n              border: 'none',\n              borderRadius: '6px',\n              padding: '0.3rem 1rem',\n              cursor: 'pointer',\n              marginTop: '0.2rem'\n            },\n            onClick: () => handleAddReply(reply._id, parentId),\n            disabled: replying[reply._id],\n            children: replying[reply._id] ? 'Replying...' : 'Reply'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), renderReplies(reply._id, ((_reply$user3 = reply.user) === null || _reply$user3 === void 0 ? void 0 : _reply$user3.name) || 'User', 2)]\n      }, reply._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 7\n      }, this);\n    });\n  }\n  if (!open) return null;\n  function handleOverlayClick(e) {\n    if (drawerRef.current && !drawerRef.current.contains(e.target)) {\n      onClose();\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: overlayStyle,\n    onMouseDown: handleOverlayClick,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: drawerRef ? drawerStyle : {},\n      ref: drawerRef,\n      onMouseDown: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: headerStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }, this), \" \\u2014 \", track === null || track === void 0 ? void 0 : track.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          style: closeBtnStyle,\n          \"aria-label\": \"Close\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: commentsListStyle,\n        children: [loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: '#aaa'\n          },\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 22\n        }, this) : null, !loading && (((_commentsByParent$roo = commentsByParent['root']) === null || _commentsByParent$roo === void 0 ? void 0 : _commentsByParent$roo.length) === 0 || !commentsByParent['root']) ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: '#aaa'\n          },\n          children: \"No comments yet. Be the first to comment!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this) : (commentsByParent['root'] || []).map(c => {\n          var _c$user, _commentsByParent$c$_, _c$user3;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '1.2rem',\n              borderBottom: '1px solid #222',\n              paddingBottom: '0.7rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              style: {\n                color: '#1db954'\n              },\n              children: ((_c$user = c.user) === null || _c$user === void 0 ? void 0 : _c$user.name) || 'User'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: '0.2rem',\n                color: '#fff'\n              },\n              children: c.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexDirection: 'row',\n                gap: '1.2rem',\n                marginTop: '0.3rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  background: 'none',\n                  color: '#1e90ff',\n                  border: 'none',\n                  cursor: 'pointer',\n                  fontSize: '0.95em'\n                },\n                onClick: () => {\n                  var _c$user2;\n                  return handleReplyToComment(c._id, ((_c$user2 = c.user) === null || _c$user2 === void 0 ? void 0 : _c$user2.name) || 'User');\n                },\n                children: \"Reply\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 19\n              }, this), ((_commentsByParent$c$_ = commentsByParent[c._id]) === null || _commentsByParent$c$_ === void 0 ? void 0 : _commentsByParent$c$_.length) > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  background: 'none',\n                  color: '#1e90ff',\n                  border: 'none',\n                  cursor: 'pointer',\n                  fontSize: '0.95em'\n                },\n                onClick: () => handleToggleReplies(c._id),\n                children: openReplies[c._id] ? 'Hide Replies' : 'View Replies'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this), activeReplyInputId === c._id && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginLeft: '1.2rem',\n                marginTop: '0.5rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                ref: el => replyInputRefs.current[c._id] = el,\n                style: replyInputStyle,\n                placeholder: \"Write a reply...\",\n                value: replyInputs[c._id] || '',\n                onChange: e => setReplyInputs(i => ({\n                  ...i,\n                  [c._id]: e.target.value\n                }))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  background: '#1db954',\n                  color: 'white',\n                  border: 'none',\n                  borderRadius: '6px',\n                  padding: '0.3rem 1rem',\n                  cursor: 'pointer',\n                  marginTop: '0.2rem'\n                },\n                onClick: () => handleAddReply(c._id),\n                disabled: replying[c._id],\n                children: replying[c._id] ? 'Replying...' : 'Reply'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 19\n            }, this), openReplies[c._id] && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginLeft: '1.2rem',\n                marginTop: '0.5rem'\n              },\n              children: renderReplies(c._id, ((_c$user3 = c.user) === null || _c$user3 === void 0 ? void 0 : _c$user3.name) || 'User', 1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 19\n            }, this)]\n          }, c._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: inputSectionStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Write your comment...\",\n          style: {\n            width: '100%',\n            minHeight: '60px',\n            borderRadius: '6px',\n            padding: '0.5rem',\n            border: '1px solid #444',\n            background: '#181818',\n            color: 'white',\n            resize: 'vertical'\n          },\n          value: newComment,\n          onChange: e => setNewComment(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            background: '#1db954',\n            color: 'white',\n            border: 'none',\n            borderRadius: '6px',\n            padding: '0.5rem 1.2rem',\n            cursor: 'pointer',\n            alignSelf: 'flex-end'\n          },\n          onClick: handleAddComment,\n          disabled: loading,\n          children: loading ? 'Commenting...' : 'Comment'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n        children: `\n        @keyframes slideInRight {\n          from { transform: translateX(100%); }\n          to { transform: translateX(0); }\n        }\n      `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 264,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentOverlay, \"x/+6xsWDAnT92b4QhDc9/XetM4o=\");\n_c = CommentOverlay;\nexport default CommentOverlay;\nvar _c;\n$RefreshReg$(_c, \"CommentOverlay\");","map":{"version":3,"names":["React","useRef","useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","overlayStyle","position","top","left","width","height","background","zIndex","display","justifyContent","drawerStyle","maxWidth","boxShadow","flexDirection","animation","headerStyle","alignItems","padding","borderBottom","commentsListStyle","flex","overflowY","color","inputSectionStyle","borderTop","gap","closeBtnStyle","border","fontSize","cursor","replyInputStyle","minHeight","borderRadius","marginTop","marginBottom","CommentOverlay","open","onClose","track","_s","_commentsByParent$roo","drawerRef","comments","setComments","loading","setLoading","newComment","setNewComment","replyInputs","setReplyInputs","replying","setReplying","openReplies","setOpenReplies","showReplyInput","setShowReplyInput","replyInputRefs","activeReplyInputId","setActiveReplyInputId","fetchComments","_id","res","get","data","handleAddComment","trim","token","localStorage","getItem","post","text","headers","Authorization","err","_err$response","_err$response$data","alert","response","message","handleAddReply","commentId","parentId","_replyInputs$commentI","replyText","r","trackId","i","_err$response2","_err$response2$data","handleReplyToComment","parentUserName","inputs","_inputs$commentId","startsWith","currentId","setTimeout","input","current","focus","val","value","setSelectionRange","length","handleReplyToReply","parentCommentId","replyId","replyUserName","_inputs$replyId","handleToggleReplies","prev","renderReplyText","match","children","style","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","commentsByParent","forEach","c","pid","parent","push","renderReplies","level","replies","map","reply","_reply$user","_reply$user3","marginLeft","user","name","onClick","_reply$user2","ref","el","placeholder","onChange","e","target","disabled","handleOverlayClick","contains","onMouseDown","stopPropagation","title","_c$user","_commentsByParent$c$_","_c$user3","paddingBottom","_c$user2","resize","alignSelf","_c","$RefreshReg$"],"sources":["C:/Users/maali/OneDrive/Desktop/MUSIC/frontend/src/components/CommentOverlay.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst overlayStyle = {\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  width: '100vw',\n  height: '100vh',\n  background: 'rgba(0,0,0,0.3)',\n  zIndex: 2000,\n  display: 'flex',\n  justifyContent: 'flex-end',\n};\n\nconst drawerStyle = {\n  width: 'min(400px, 100vw)',\n  maxWidth: '100vw',\n  height: '100vh',\n  background: '#181818',\n  boxShadow: '-2px 0 16px rgba(0,0,0,0.2)',\n  display: 'flex',\n  flexDirection: 'column',\n  position: 'relative',\n  animation: 'slideInRight 0.2s',\n};\n\nconst headerStyle = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  padding: '1rem',\n  borderBottom: '1px solid #222',\n  background: '#222',\n};\n\nconst commentsListStyle = {\n  flex: 1,\n  overflowY: 'auto',\n  padding: '1rem',\n  color: 'white',\n};\n\nconst inputSectionStyle = {\n  borderTop: '1px solid #222',\n  padding: '1rem',\n  background: '#222',\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '0.5rem',\n};\n\nconst closeBtnStyle = {\n  background: 'none',\n  border: 'none',\n  color: '#fff',\n  fontSize: '1.5rem',\n  cursor: 'pointer',\n};\n\nconst replyInputStyle = {\n  width: '100%',\n  minHeight: '40px',\n  borderRadius: '6px',\n  padding: '0.3rem',\n  border: '1px solid #444',\n  background: '#222',\n  color: 'white',\n  marginTop: '0.3rem',\n  marginBottom: '0.3rem',\n};\n\nfunction CommentOverlay({ open, onClose, track }) {\n  const drawerRef = useRef();\n  const [comments, setComments] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [newComment, setNewComment] = useState('');\n  const [replyInputs, setReplyInputs] = useState({}); // {commentId: replyText}\n  const [replying, setReplying] = useState({}); // {commentId: bool}\n  const [openReplies, setOpenReplies] = useState({}); // {commentId: true/false}\n  const [showReplyInput, setShowReplyInput] = useState({}); // {commentId: bool}\n  const replyInputRefs = useRef({});\n  const [activeReplyInputId, setActiveReplyInputId] = useState(null); // ID of comment or reply being replied to\n\n  // Fetch all comments for a track as a flat array\n  const fetchComments = async () => {\n    if (!track?._id) return;\n    setLoading(true);\n    try {\n      const res = await axios.get(`http://localhost:5000/api/comments/track/${track._id}/comments-flat`);\n      setComments(res.data.comments || []);\n    } catch {\n      setComments([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (!open || !track?._id) return;\n    fetchComments();\n    setOpenReplies({}); // Hide all replies by default when overlay opens or track changes\n  }, [open, track]);\n\n  // Add a new top-level comment\n  const handleAddComment = async () => {\n    if (!newComment.trim()) return;\n    setLoading(true);\n    try {\n      const token = localStorage.getItem('token');\n      await axios.post(`http://localhost:5000/api/comments/track/${track._id}/add`, {\n        text: newComment.trim(),\n      }, { headers: { Authorization: `Bearer ${token}` } });\n      setNewComment('');\n      await fetchComments(); // Re-fetch all comments from backend\n    } catch (err) {\n      alert(err.response?.data?.message || 'Error adding comment');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Add a reply to a comment (always to top-level comment)\n  const handleAddReply = async (commentId, parentId = null) => {\n    // commentId: where the input is shown (could be parent or reply id)\n    // parentId: the top-level comment id to attach the reply to\n    const replyText = replyInputs[commentId]?.trim();\n    if (!replyText) return;\n    setReplying(r => ({ ...r, [commentId]: true }));\n    try {\n      const token = localStorage.getItem('token');\n      await axios.post(`http://localhost:5000/api/comments/comment/${parentId || commentId}/reply`, {\n        trackId: track._id,\n        text: replyText,\n      }, { headers: { Authorization: `Bearer ${token}` } });\n      setReplyInputs(i => ({ ...i, [commentId]: '' }));\n      setActiveReplyInputId(null); // Hide input after reply\n      await fetchComments(); // Refresh comments\n    } catch (err) {\n      alert(err.response?.data?.message || 'Error adding reply');\n    } finally {\n      setReplying(r => ({ ...r, [commentId]: false }));\n    }\n  };\n\n  // New: handle reply to a top-level comment (pre-fill @ParentUserName)\n  const handleReplyToComment = (commentId, parentUserName) => {\n    setReplyInputs(inputs => ({\n      ...inputs,\n      [commentId]: inputs[commentId]?.startsWith(`@${parentUserName} `)\n        ? inputs[commentId]\n        : `@${parentUserName} `\n    }));\n    setActiveReplyInputId(currentId => {\n      if (currentId === commentId) return null; // Toggle off if already open\n      setTimeout(() => {\n        const input = replyInputRefs.current[commentId];\n        if (input) {\n          input.focus();\n          const val = input.value;\n          input.setSelectionRange(val.length, val.length);\n        }\n      }, 0);\n      return commentId;\n    });\n  };\n\n  // New: handle reply to a reply (pre-fill @username in the parent comment's reply input)\n  const handleReplyToReply = (parentCommentId, replyId, replyUserName) => {\n    setReplyInputs(inputs => ({\n      ...inputs,\n      [replyId]: inputs[replyId]?.startsWith(`@${replyUserName} `)\n        ? inputs[replyId]\n        : `@${replyUserName} `\n    }));\n    setActiveReplyInputId(currentId => {\n      if (currentId === replyId) return null; // Toggle off if already open\n      setTimeout(() => {\n        const input = replyInputRefs.current[replyId];\n        if (input) {\n          input.focus();\n          const val = input.value;\n          input.setSelectionRange(val.length, val.length);\n        }\n      }, 0);\n      return replyId;\n    });\n  };\n\n  // Toggle replies for a comment\n  const handleToggleReplies = async (commentId) => {\n    setOpenReplies(prev => ({ ...prev, [commentId]: !prev[commentId] }));\n  };\n\n  // Helper: Render reply text with styled @username if present\n  function renderReplyText(text) {\n    const match = text.match(/^@(\\S+)\\s(.*)$/);\n    if (match) {\n      return (\n        <>\n          <span style={{ color: '#1e90ff', fontWeight: 500 }}>{`@${match[1]}`}</span>{' '}{match[2]}\n        </>\n      );\n    }\n    return text;\n  }\n\n  // Group comments by parentId\n  const commentsByParent = {};\n  comments.forEach(c => {\n    const pid = c.parent || 'root';\n    if (!commentsByParent[pid]) commentsByParent[pid] = [];\n    commentsByParent[pid].push(c);\n  });\n\n  // Helper: Render replies to a comment (all descendants of a reply at same indentation)\n  function renderReplies(parentId, parentUserName, level = 1) {\n    const replies = commentsByParent[parentId] || [];\n    if (level > 2) return null; // Only two levels of indentation\n    return replies.map(reply => (\n      <div key={reply._id} style={{ marginLeft: level === 1 ? '1.2rem' : '2.4rem', marginTop: '0.5rem', marginBottom: '0.7rem' }}>\n        <b style={{ color: '#1db954' }}>{reply.user?.name || 'User'}</b>\n        <div style={{ color: '#fff' }}>{renderReplyText(reply.text)}</div>\n        <button\n          style={{ background: 'none', color: '#1e90ff', border: 'none', cursor: 'pointer', fontSize: '0.92em', marginLeft: '0.5rem' }}\n          onClick={() => handleReplyToReply(parentId, reply._id, reply.user?.name || 'User')}\n        >\n          Reply\n        </button>\n        {/* Show reply input below this reply if active */}\n        {activeReplyInputId === reply._id && (\n          <div style={{ marginLeft: '1.2rem', marginTop: '0.5rem' }}>\n            <textarea\n              ref={el => (replyInputRefs.current[reply._id] = el)}\n              style={replyInputStyle}\n              placeholder=\"Write a reply...\"\n              value={replyInputs[reply._id] || ''}\n              onChange={e => setReplyInputs(i => ({ ...i, [reply._id]: e.target.value }))}\n            />\n            <button\n              style={{ background: '#1db954', color: 'white', border: 'none', borderRadius: '6px', padding: '0.3rem 1rem', cursor: 'pointer', marginTop: '0.2rem' }}\n              onClick={() => handleAddReply(reply._id, parentId)}\n              disabled={replying[reply._id]}\n            >\n              {replying[reply._id] ? 'Replying...' : 'Reply'}\n            </button>\n          </div>\n        )}\n        {/* Render all descendants of this reply at the same indentation (no further nesting) */}\n        {renderReplies(reply._id, reply.user?.name || 'User', 2)}\n      </div>\n    ));\n  }\n\n  if (!open) return null;\n\n  function handleOverlayClick(e) {\n    if (drawerRef.current && !drawerRef.current.contains(e.target)) {\n      onClose();\n    }\n  }\n\n  return (\n    <div style={overlayStyle} onMouseDown={handleOverlayClick}>\n      <div style={drawerRef ? drawerStyle : {}} ref={drawerRef} onMouseDown={e => e.stopPropagation()}>\n        <div style={headerStyle}>\n          <span><b>Comments</b> — {track?.title}</span>\n          <button onClick={onClose} style={closeBtnStyle} aria-label=\"Close\">×</button>\n        </div>\n        <div style={commentsListStyle}>\n          {loading ? <p style={{ color: '#aaa' }}>Loading...</p> : null}\n          {!loading && (commentsByParent['root']?.length === 0 || !commentsByParent['root']) ? (\n            <p style={{ color: '#aaa' }}>No comments yet. Be the first to comment!</p>\n          ) : (\n            (commentsByParent['root'] || []).map(c => (\n              <div key={c._id} style={{ marginBottom: '1.2rem', borderBottom: '1px solid #222', paddingBottom: '0.7rem' }}>\n                <b style={{ color: '#1db954' }}>{c.user?.name || 'User'}</b>\n                <div style={{ marginTop: '0.2rem', color: '#fff' }}>{c.text}</div>\n                <div style={{ display: 'flex', flexDirection: 'row', gap: '1.2rem', marginTop: '0.3rem' }}>\n                  <button\n                    style={{ background: 'none', color: '#1e90ff', border: 'none', cursor: 'pointer', fontSize: '0.95em' }}\n                    onClick={() => handleReplyToComment(c._id, c.user?.name || 'User')}\n                  >\n                    Reply\n                  </button>\n                  {(commentsByParent[c._id]?.length > 0) && (\n                    <button\n                      style={{ background: 'none', color: '#1e90ff', border: 'none', cursor: 'pointer', fontSize: '0.95em' }}\n                      onClick={() => handleToggleReplies(c._id)}\n                    >\n                      {openReplies[c._id] ? 'Hide Replies' : 'View Replies'}\n                    </button>\n                  )}\n                </div>\n                {/* Show reply input below parent comment if active */}\n                {activeReplyInputId === c._id && (\n                  <div style={{ marginLeft: '1.2rem', marginTop: '0.5rem' }}>\n                    <textarea\n                      ref={el => (replyInputRefs.current[c._id] = el)}\n                      style={replyInputStyle}\n                      placeholder=\"Write a reply...\"\n                      value={replyInputs[c._id] || ''}\n                      onChange={e => setReplyInputs(i => ({ ...i, [c._id]: e.target.value }))}\n                    />\n                    <button\n                      style={{ background: '#1db954', color: 'white', border: 'none', borderRadius: '6px', padding: '0.3rem 1rem', cursor: 'pointer', marginTop: '0.2rem' }}\n                      onClick={() => handleAddReply(c._id)}\n                      disabled={replying[c._id]}\n                    >\n                      {replying[c._id] ? 'Replying...' : 'Reply'}\n                    </button>\n                  </div>\n                )}\n                {/* Replies: only two levels of indentation */}\n                {openReplies[c._id] && (\n                  <div style={{ marginLeft: '1.2rem', marginTop: '0.5rem' }}>\n                    {renderReplies(c._id, c.user?.name || 'User', 1)}\n                  </div>\n                )}\n              </div>\n            ))\n          )}\n        </div>\n        <div style={inputSectionStyle}>\n          <textarea\n            placeholder=\"Write your comment...\"\n            style={{ width: '100%', minHeight: '60px', borderRadius: '6px', padding: '0.5rem', border: '1px solid #444', background: '#181818', color: 'white', resize: 'vertical' }}\n            value={newComment}\n            onChange={e => setNewComment(e.target.value)}\n          />\n          <button\n            style={{ background: '#1db954', color: 'white', border: 'none', borderRadius: '6px', padding: '0.5rem 1.2rem', cursor: 'pointer', alignSelf: 'flex-end' }}\n            onClick={handleAddComment}\n            disabled={loading}\n          >\n            {loading ? 'Commenting...' : 'Comment'}\n          </button>\n        </div>\n      <style>{`\n        @keyframes slideInRight {\n          from { transform: translateX(100%); }\n          to { transform: translateX(0); }\n        }\n      `}</style>\n      </div>\n    </div>\n  );\n}\n\nexport default CommentOverlay; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}