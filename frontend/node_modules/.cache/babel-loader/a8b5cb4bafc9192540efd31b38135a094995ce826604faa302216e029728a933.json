{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maali\\\\OneDrive\\\\Desktop\\\\MUSIC\\\\frontend\\\\src\\\\components\\\\CommentOverlay.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst overlayStyle = {\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  width: '100vw',\n  height: '100vh',\n  background: 'rgba(0,0,0,0.3)',\n  zIndex: 2000,\n  display: 'flex',\n  justifyContent: 'flex-end'\n};\nconst drawerStyle = {\n  width: 'min(400px, 100vw)',\n  maxWidth: '100vw',\n  height: '100vh',\n  background: '#181818',\n  boxShadow: '-2px 0 16px rgba(0,0,0,0.2)',\n  display: 'flex',\n  flexDirection: 'column',\n  position: 'relative',\n  animation: 'slideInRight 0.2s'\n};\nconst headerStyle = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  padding: '1rem',\n  borderBottom: '1px solid #222',\n  background: '#222'\n};\nconst commentsListStyle = {\n  flex: 1,\n  overflowY: 'auto',\n  padding: '1rem',\n  color: 'white'\n};\nconst inputSectionStyle = {\n  borderTop: '1px solid #222',\n  padding: '1rem',\n  background: '#222',\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '0.5rem'\n};\nconst closeBtnStyle = {\n  background: 'none',\n  border: 'none',\n  color: '#fff',\n  fontSize: '1.5rem',\n  cursor: 'pointer'\n};\nconst replyInputStyle = {\n  width: '100%',\n  minHeight: '40px',\n  borderRadius: '6px',\n  padding: '0.3rem',\n  border: '1px solid #444',\n  background: '#222',\n  color: 'white',\n  marginTop: '0.3rem',\n  marginBottom: '0.3rem'\n};\nfunction CommentOverlay({\n  open,\n  onClose,\n  track\n}) {\n  _s();\n  const drawerRef = useRef();\n  const [comments, setComments] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [newComment, setNewComment] = useState('');\n  const [replyInputs, setReplyInputs] = useState({}); // {commentId: replyText}\n  const [replying, setReplying] = useState({}); // {commentId: bool}\n  const [openReplies, setOpenReplies] = useState({}); // {commentId: true/false}\n  const [showReplyInput, setShowReplyInput] = useState({}); // {commentId: bool}\n  const replyInputRefs = useRef({});\n  const [activeReplyInputId, setActiveReplyInputId] = useState(null); // ID of comment or reply being replied to\n\n  // Fetch top-level comments when overlay opens or track changes\n  const fetchComments = async () => {\n    if (!(track !== null && track !== void 0 && track._id)) return;\n    setLoading(true);\n    try {\n      const res = await axios.get(`http://localhost:5000/api/comments/track/${track._id}/comments`);\n      setComments(res.data.comments || []);\n    } catch {\n      setComments([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (!open || !(track !== null && track !== void 0 && track._id)) return;\n    fetchComments();\n    setOpenReplies({}); // Hide all replies by default when overlay opens or track changes\n  }, [open, track]);\n\n  // Add a new top-level comment\n  const handleAddComment = async () => {\n    if (!newComment.trim()) return;\n    setLoading(true);\n    try {\n      const token = localStorage.getItem('token');\n      await axios.post(`http://localhost:5000/api/comments/track/${track._id}/add`, {\n        text: newComment.trim()\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setNewComment('');\n      await fetchComments(); // Re-fetch all comments from backend\n    } catch (err) {\n      var _err$response, _err$response$data;\n      alert(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Error adding comment');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Add a reply to a comment (always to top-level comment)\n  const handleAddReply = async (commentId, parentId = null) => {\n    var _replyInputs$commentI;\n    // commentId: where the input is shown (could be parent or reply id)\n    // parentId: the top-level comment id to attach the reply to\n    const replyText = (_replyInputs$commentI = replyInputs[commentId]) === null || _replyInputs$commentI === void 0 ? void 0 : _replyInputs$commentI.trim();\n    if (!replyText) return;\n    setReplying(r => ({\n      ...r,\n      [commentId]: true\n    }));\n    try {\n      const token = localStorage.getItem('token');\n      await axios.post(`http://localhost:5000/api/comments/comment/${parentId || commentId}/reply`, {\n        trackId: track._id,\n        text: replyText\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setReplyInputs(i => ({\n        ...i,\n        [commentId]: ''\n      }));\n      setActiveReplyInputId(null); // Hide input after reply\n      await fetchComments(); // Refresh comments\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      alert(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Error adding reply');\n    } finally {\n      setReplying(r => ({\n        ...r,\n        [commentId]: false\n      }));\n    }\n  };\n\n  // New: handle reply to a top-level comment (pre-fill @ParentUserName)\n  const handleReplyToComment = (commentId, parentUserName) => {\n    setReplyInputs(inputs => {\n      var _inputs$commentId;\n      return {\n        ...inputs,\n        [commentId]: (_inputs$commentId = inputs[commentId]) !== null && _inputs$commentId !== void 0 && _inputs$commentId.startsWith(`@${parentUserName} `) ? inputs[commentId] : `@${parentUserName} `\n      };\n    });\n    setActiveReplyInputId(currentId => {\n      if (currentId === commentId) return null; // Toggle off if already open\n      setTimeout(() => {\n        const input = replyInputRefs.current[commentId];\n        if (input) {\n          input.focus();\n          const val = input.value;\n          input.setSelectionRange(val.length, val.length);\n        }\n      }, 0);\n      return commentId;\n    });\n  };\n\n  // New: handle reply to a reply (pre-fill @username in the parent comment's reply input)\n  const handleReplyToReply = (parentCommentId, replyId, replyUserName) => {\n    setReplyInputs(inputs => {\n      var _inputs$replyId;\n      return {\n        ...inputs,\n        [replyId]: (_inputs$replyId = inputs[replyId]) !== null && _inputs$replyId !== void 0 && _inputs$replyId.startsWith(`@${replyUserName} `) ? inputs[replyId] : `@${replyUserName} `\n      };\n    });\n    setActiveReplyInputId(currentId => {\n      if (currentId === replyId) return null; // Toggle off if already open\n      setTimeout(() => {\n        const input = replyInputRefs.current[replyId];\n        if (input) {\n          input.focus();\n          const val = input.value;\n          input.setSelectionRange(val.length, val.length);\n        }\n      }, 0);\n      return replyId;\n    });\n  };\n\n  // Toggle replies for a comment\n  const handleToggleReplies = async commentId => {\n    setOpenReplies(prev => ({\n      ...prev,\n      [commentId]: !prev[commentId]\n    }));\n  };\n\n  // Helper: Render reply text with styled @username if present\n  function renderReplyText(text) {\n    const match = text.match(/^@(\\S+)\\s(.*)$/);\n    if (match) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#1e90ff',\n            fontWeight: 500\n          },\n          children: `@${match[1]}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), ' ', match[2]]\n      }, void 0, true);\n    }\n    return text;\n  }\n\n  // Render comments with flat descendants under each reply\n  function renderFlatReplies(comment) {\n    var _comment$user, _comment$replies;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '1.2rem',\n        borderBottom: '1px solid #222',\n        paddingBottom: '0.7rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        style: {\n          color: '#1db954'\n        },\n        children: ((_comment$user = comment.user) === null || _comment$user === void 0 ? void 0 : _comment$user.name) || 'User'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '0.2rem',\n          color: '#fff'\n        },\n        children: comment.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'row',\n          gap: '1.2rem',\n          marginTop: '0.3rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            background: 'none',\n            color: '#1e90ff',\n            border: 'none',\n            cursor: 'pointer',\n            fontSize: '0.95em'\n          },\n          onClick: () => {\n            var _comment$user2;\n            return handleReplyToComment(comment._id, ((_comment$user2 = comment.user) === null || _comment$user2 === void 0 ? void 0 : _comment$user2.name) || 'User');\n          },\n          children: \"Reply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), comment.replies && comment.replies.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            background: 'none',\n            color: '#1e90ff',\n            border: 'none',\n            cursor: 'pointer',\n            fontSize: '0.95em'\n          },\n          onClick: () => handleToggleReplies(comment._id),\n          children: openReplies[comment._id] ? 'Hide Replies' : 'View Replies'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), activeReplyInputId === comment._id && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: '1.2rem',\n          marginTop: '0.5rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: el => replyInputRefs.current[comment._id] = el,\n          style: replyInputStyle,\n          placeholder: \"Write a reply...\",\n          value: replyInputs[comment._id] || '',\n          onChange: e => setReplyInputs(i => ({\n            ...i,\n            [comment._id]: e.target.value\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            background: '#1db954',\n            color: 'white',\n            border: 'none',\n            borderRadius: '6px',\n            padding: '0.3rem 1rem',\n            cursor: 'pointer',\n            marginTop: '0.2rem'\n          },\n          onClick: () => handleAddReply(comment._id),\n          disabled: replying[comment._id],\n          children: replying[comment._id] ? 'Replying...' : 'Reply'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this), openReplies[comment._id] && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: '1.5rem',\n          marginTop: '0.5rem'\n        },\n        children: ((_comment$replies = comment.replies) === null || _comment$replies === void 0 ? void 0 : _comment$replies.length) === 0 || !comment.replies ? /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#aaa'\n          },\n          children: \"No replies yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 15\n        }, this) : comment.replies.map(r => {\n          var _r$user;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '0.7rem',\n              borderLeft: '2px solid #333',\n              paddingLeft: '0.7rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              style: {\n                color: '#1db954'\n              },\n              children: ((_r$user = r.user) === null || _r$user === void 0 ? void 0 : _r$user.name) || 'User'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: '#fff'\n              },\n              children: renderReplyText(r.text)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                background: 'none',\n                color: '#1e90ff',\n                border: 'none',\n                cursor: 'pointer',\n                fontSize: '0.92em',\n                marginLeft: '0.5rem'\n              },\n              onClick: () => {\n                var _r$user2;\n                return handleReplyToReply(comment._id, r._id, ((_r$user2 = r.user) === null || _r$user2 === void 0 ? void 0 : _r$user2.name) || 'User');\n              },\n              children: \"Reply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 19\n            }, this), activeReplyInputId === r._id && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginLeft: '1.2rem',\n                marginTop: '0.5rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                ref: el => replyInputRefs.current[r._id] = el,\n                style: replyInputStyle,\n                placeholder: \"Write a reply...\",\n                value: replyInputs[r._id] || '',\n                onChange: e => setReplyInputs(i => ({\n                  ...i,\n                  [r._id]: e.target.value\n                }))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  background: '#1db954',\n                  color: 'white',\n                  border: 'none',\n                  borderRadius: '6px',\n                  padding: '0.3rem 1rem',\n                  cursor: 'pointer',\n                  marginTop: '0.2rem'\n                },\n                onClick: () => handleAddReply(r._id, comment._id),\n                disabled: replying[r._id],\n                children: replying[r._id] ? 'Replying...' : 'Reply'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 21\n            }, this), r.descendants && r.descendants.length > 0 && r.descendants.map(desc => {\n              var _desc$user;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginBottom: '0.7rem',\n                  marginLeft: '1.5rem',\n                  borderLeft: '2px solid #444',\n                  paddingLeft: '0.7rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  style: {\n                    color: '#1db954'\n                  },\n                  children: ((_desc$user = desc.user) === null || _desc$user === void 0 ? void 0 : _desc$user.name) || 'User'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    color: '#fff'\n                  },\n                  children: renderReplyText(desc.text)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    background: 'none',\n                    color: '#1e90ff',\n                    border: 'none',\n                    cursor: 'pointer',\n                    fontSize: '0.92em',\n                    marginLeft: '0.5rem'\n                  },\n                  onClick: () => {\n                    var _desc$user2;\n                    return handleReplyToReply(comment._id, desc._id, ((_desc$user2 = desc.user) === null || _desc$user2 === void 0 ? void 0 : _desc$user2.name) || 'User');\n                  },\n                  children: \"Reply\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 25\n                }, this), activeReplyInputId === desc._id && /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginLeft: '1.2rem',\n                    marginTop: '0.5rem'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                    ref: el => replyInputRefs.current[desc._id] = el,\n                    style: replyInputStyle,\n                    placeholder: \"Write a reply...\",\n                    value: replyInputs[desc._id] || '',\n                    onChange: e => setReplyInputs(i => ({\n                      ...i,\n                      [desc._id]: e.target.value\n                    }))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    style: {\n                      background: '#1db954',\n                      color: 'white',\n                      border: 'none',\n                      borderRadius: '6px',\n                      padding: '0.3rem 1rem',\n                      cursor: 'pointer',\n                      marginTop: '0.2rem'\n                    },\n                    onClick: () => handleAddReply(desc._id, comment._id),\n                    disabled: replying[desc._id],\n                    children: replying[desc._id] ? 'Replying...' : 'Reply'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 27\n                }, this)]\n              }, desc._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 23\n              }, this);\n            })]\n          }, r._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this)]\n    }, comment._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this);\n  }\n  if (!open) return null;\n  function handleOverlayClick(e) {\n    if (drawerRef.current && !drawerRef.current.contains(e.target)) {\n      onClose();\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: overlayStyle,\n    onMouseDown: handleOverlayClick,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: drawerRef ? drawerStyle : {},\n      ref: drawerRef,\n      onMouseDown: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: headerStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 17\n          }, this), \" \\u2014 \", track === null || track === void 0 ? void 0 : track.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          style: closeBtnStyle,\n          \"aria-label\": \"Close\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: commentsListStyle,\n        children: [loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: '#aaa'\n          },\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 22\n        }, this) : null, !loading && comments.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: '#aaa'\n          },\n          children: \"No comments yet. Be the first to comment!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }, this) : comments.map(comment => renderFlatReplies(comment))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: inputSectionStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Write your comment...\",\n          style: {\n            width: '100%',\n            minHeight: '60px',\n            borderRadius: '6px',\n            padding: '0.5rem',\n            border: '1px solid #444',\n            background: '#181818',\n            color: 'white',\n            resize: 'vertical'\n          },\n          value: newComment,\n          onChange: e => setNewComment(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            background: '#1db954',\n            color: 'white',\n            border: 'none',\n            borderRadius: '6px',\n            padding: '0.5rem 1.2rem',\n            cursor: 'pointer',\n            alignSelf: 'flex-end'\n          },\n          onClick: handleAddComment,\n          disabled: loading,\n          children: loading ? 'Commenting...' : 'Comment'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n        children: `\n        @keyframes slideInRight {\n          from { transform: translateX(100%); }\n          to { transform: translateX(0); }\n        }\n      `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 336,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentOverlay, \"x/+6xsWDAnT92b4QhDc9/XetM4o=\");\n_c = CommentOverlay;\nexport default CommentOverlay;\nvar _c;\n$RefreshReg$(_c, \"CommentOverlay\");","map":{"version":3,"names":["React","useRef","useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","overlayStyle","position","top","left","width","height","background","zIndex","display","justifyContent","drawerStyle","maxWidth","boxShadow","flexDirection","animation","headerStyle","alignItems","padding","borderBottom","commentsListStyle","flex","overflowY","color","inputSectionStyle","borderTop","gap","closeBtnStyle","border","fontSize","cursor","replyInputStyle","minHeight","borderRadius","marginTop","marginBottom","CommentOverlay","open","onClose","track","_s","drawerRef","comments","setComments","loading","setLoading","newComment","setNewComment","replyInputs","setReplyInputs","replying","setReplying","openReplies","setOpenReplies","showReplyInput","setShowReplyInput","replyInputRefs","activeReplyInputId","setActiveReplyInputId","fetchComments","_id","res","get","data","handleAddComment","trim","token","localStorage","getItem","post","text","headers","Authorization","err","_err$response","_err$response$data","alert","response","message","handleAddReply","commentId","parentId","_replyInputs$commentI","replyText","r","trackId","i","_err$response2","_err$response2$data","handleReplyToComment","parentUserName","inputs","_inputs$commentId","startsWith","currentId","setTimeout","input","current","focus","val","value","setSelectionRange","length","handleReplyToReply","parentCommentId","replyId","replyUserName","_inputs$replyId","handleToggleReplies","prev","renderReplyText","match","children","style","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","renderFlatReplies","comment","_comment$user","_comment$replies","paddingBottom","user","name","onClick","_comment$user2","replies","marginLeft","ref","el","placeholder","onChange","e","target","disabled","map","_r$user","borderLeft","paddingLeft","_r$user2","descendants","desc","_desc$user","_desc$user2","handleOverlayClick","contains","onMouseDown","stopPropagation","title","resize","alignSelf","_c","$RefreshReg$"],"sources":["C:/Users/maali/OneDrive/Desktop/MUSIC/frontend/src/components/CommentOverlay.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst overlayStyle = {\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  width: '100vw',\n  height: '100vh',\n  background: 'rgba(0,0,0,0.3)',\n  zIndex: 2000,\n  display: 'flex',\n  justifyContent: 'flex-end',\n};\n\nconst drawerStyle = {\n  width: 'min(400px, 100vw)',\n  maxWidth: '100vw',\n  height: '100vh',\n  background: '#181818',\n  boxShadow: '-2px 0 16px rgba(0,0,0,0.2)',\n  display: 'flex',\n  flexDirection: 'column',\n  position: 'relative',\n  animation: 'slideInRight 0.2s',\n};\n\nconst headerStyle = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  padding: '1rem',\n  borderBottom: '1px solid #222',\n  background: '#222',\n};\n\nconst commentsListStyle = {\n  flex: 1,\n  overflowY: 'auto',\n  padding: '1rem',\n  color: 'white',\n};\n\nconst inputSectionStyle = {\n  borderTop: '1px solid #222',\n  padding: '1rem',\n  background: '#222',\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '0.5rem',\n};\n\nconst closeBtnStyle = {\n  background: 'none',\n  border: 'none',\n  color: '#fff',\n  fontSize: '1.5rem',\n  cursor: 'pointer',\n};\n\nconst replyInputStyle = {\n  width: '100%',\n  minHeight: '40px',\n  borderRadius: '6px',\n  padding: '0.3rem',\n  border: '1px solid #444',\n  background: '#222',\n  color: 'white',\n  marginTop: '0.3rem',\n  marginBottom: '0.3rem',\n};\n\nfunction CommentOverlay({ open, onClose, track }) {\n  const drawerRef = useRef();\n  const [comments, setComments] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [newComment, setNewComment] = useState('');\n  const [replyInputs, setReplyInputs] = useState({}); // {commentId: replyText}\n  const [replying, setReplying] = useState({}); // {commentId: bool}\n  const [openReplies, setOpenReplies] = useState({}); // {commentId: true/false}\n  const [showReplyInput, setShowReplyInput] = useState({}); // {commentId: bool}\n  const replyInputRefs = useRef({});\n  const [activeReplyInputId, setActiveReplyInputId] = useState(null); // ID of comment or reply being replied to\n\n  // Fetch top-level comments when overlay opens or track changes\n  const fetchComments = async () => {\n    if (!track?._id) return;\n    setLoading(true);\n    try {\n      const res = await axios.get(`http://localhost:5000/api/comments/track/${track._id}/comments`);\n      setComments(res.data.comments || []);\n    } catch {\n      setComments([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (!open || !track?._id) return;\n    fetchComments();\n    setOpenReplies({}); // Hide all replies by default when overlay opens or track changes\n  }, [open, track]);\n\n  // Add a new top-level comment\n  const handleAddComment = async () => {\n    if (!newComment.trim()) return;\n    setLoading(true);\n    try {\n      const token = localStorage.getItem('token');\n      await axios.post(`http://localhost:5000/api/comments/track/${track._id}/add`, {\n        text: newComment.trim(),\n      }, { headers: { Authorization: `Bearer ${token}` } });\n      setNewComment('');\n      await fetchComments(); // Re-fetch all comments from backend\n    } catch (err) {\n      alert(err.response?.data?.message || 'Error adding comment');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Add a reply to a comment (always to top-level comment)\n  const handleAddReply = async (commentId, parentId = null) => {\n    // commentId: where the input is shown (could be parent or reply id)\n    // parentId: the top-level comment id to attach the reply to\n    const replyText = replyInputs[commentId]?.trim();\n    if (!replyText) return;\n    setReplying(r => ({ ...r, [commentId]: true }));\n    try {\n      const token = localStorage.getItem('token');\n      await axios.post(`http://localhost:5000/api/comments/comment/${parentId || commentId}/reply`, {\n        trackId: track._id,\n        text: replyText,\n      }, { headers: { Authorization: `Bearer ${token}` } });\n      setReplyInputs(i => ({ ...i, [commentId]: '' }));\n      setActiveReplyInputId(null); // Hide input after reply\n      await fetchComments(); // Refresh comments\n    } catch (err) {\n      alert(err.response?.data?.message || 'Error adding reply');\n    } finally {\n      setReplying(r => ({ ...r, [commentId]: false }));\n    }\n  };\n\n  // New: handle reply to a top-level comment (pre-fill @ParentUserName)\n  const handleReplyToComment = (commentId, parentUserName) => {\n    setReplyInputs(inputs => ({\n      ...inputs,\n      [commentId]: inputs[commentId]?.startsWith(`@${parentUserName} `)\n        ? inputs[commentId]\n        : `@${parentUserName} `\n    }));\n    setActiveReplyInputId(currentId => {\n      if (currentId === commentId) return null; // Toggle off if already open\n      setTimeout(() => {\n        const input = replyInputRefs.current[commentId];\n        if (input) {\n          input.focus();\n          const val = input.value;\n          input.setSelectionRange(val.length, val.length);\n        }\n      }, 0);\n      return commentId;\n    });\n  };\n\n  // New: handle reply to a reply (pre-fill @username in the parent comment's reply input)\n  const handleReplyToReply = (parentCommentId, replyId, replyUserName) => {\n    setReplyInputs(inputs => ({\n      ...inputs,\n      [replyId]: inputs[replyId]?.startsWith(`@${replyUserName} `)\n        ? inputs[replyId]\n        : `@${replyUserName} `\n    }));\n    setActiveReplyInputId(currentId => {\n      if (currentId === replyId) return null; // Toggle off if already open\n      setTimeout(() => {\n        const input = replyInputRefs.current[replyId];\n        if (input) {\n          input.focus();\n          const val = input.value;\n          input.setSelectionRange(val.length, val.length);\n        }\n      }, 0);\n      return replyId;\n    });\n  };\n\n  // Toggle replies for a comment\n  const handleToggleReplies = async (commentId) => {\n    setOpenReplies(prev => ({ ...prev, [commentId]: !prev[commentId] }));\n  };\n\n  // Helper: Render reply text with styled @username if present\n  function renderReplyText(text) {\n    const match = text.match(/^@(\\S+)\\s(.*)$/);\n    if (match) {\n      return (\n        <>\n          <span style={{ color: '#1e90ff', fontWeight: 500 }}>{`@${match[1]}`}</span>{' '}{match[2]}\n        </>\n      );\n    }\n    return text;\n  }\n\n  // Render comments with flat descendants under each reply\n  function renderFlatReplies(comment) {\n    return (\n      <div key={comment._id} style={{ marginBottom: '1.2rem', borderBottom: '1px solid #222', paddingBottom: '0.7rem' }}>\n        {/* Top-level comment: no indentation */}\n        <b style={{ color: '#1db954' }}>{comment.user?.name || 'User'}</b>\n        <div style={{ marginTop: '0.2rem', color: '#fff' }}>{comment.text}</div>\n        <div style={{ display: 'flex', flexDirection: 'row', gap: '1.2rem', marginTop: '0.3rem' }}>\n          <button\n            style={{ background: 'none', color: '#1e90ff', border: 'none', cursor: 'pointer', fontSize: '0.95em' }}\n            onClick={() => handleReplyToComment(comment._id, comment.user?.name || 'User')}\n          >\n            Reply\n          </button>\n          {(comment.replies && comment.replies.length > 0) && (\n            <button\n              style={{ background: 'none', color: '#1e90ff', border: 'none', cursor: 'pointer', fontSize: '0.95em' }}\n              onClick={() => handleToggleReplies(comment._id)}\n            >\n              {openReplies[comment._id] ? 'Hide Replies' : 'View Replies'}\n            </button>\n          )}\n        </div>\n        {activeReplyInputId === comment._id && (\n          <div style={{ marginLeft: '1.2rem', marginTop: '0.5rem' }}>\n            <textarea\n              ref={el => (replyInputRefs.current[comment._id] = el)}\n              style={replyInputStyle}\n              placeholder=\"Write a reply...\"\n              value={replyInputs[comment._id] || ''}\n              onChange={e => setReplyInputs(i => ({ ...i, [comment._id]: e.target.value }))}\n            />\n            <button\n              style={{ background: '#1db954', color: 'white', border: 'none', borderRadius: '6px', padding: '0.3rem 1rem', cursor: 'pointer', marginTop: '0.2rem' }}\n              onClick={() => handleAddReply(comment._id)}\n              disabled={replying[comment._id]}\n            >\n              {replying[comment._id] ? 'Replying...' : 'Reply'}\n            </button>\n          </div>\n        )}\n        {/* Replies */}\n        {openReplies[comment._id] && (\n          <div style={{ marginLeft: '1.5rem', marginTop: '0.5rem' }}>\n            {(comment.replies?.length === 0 || !comment.replies) ? (\n              <span style={{ color: '#aaa' }}>No replies yet.</span>\n            ) : (\n              comment.replies.map(r => (\n                <div key={r._id} style={{ marginBottom: '0.7rem', borderLeft: '2px solid #333', paddingLeft: '0.7rem' }}>\n                  {/* Direct reply: indented once */}\n                  <b style={{ color: '#1db954' }}>{r.user?.name || 'User'}</b>\n                  <div style={{ color: '#fff' }}>{renderReplyText(r.text)}</div>\n                  <button\n                    style={{ background: 'none', color: '#1e90ff', border: 'none', cursor: 'pointer', fontSize: '0.92em', marginLeft: '0.5rem' }}\n                    onClick={() => handleReplyToReply(comment._id, r._id, r.user?.name || 'User')}\n                  >\n                    Reply\n                  </button>\n                  {activeReplyInputId === r._id && (\n                    <div style={{ marginLeft: '1.2rem', marginTop: '0.5rem' }}>\n                      <textarea\n                        ref={el => (replyInputRefs.current[r._id] = el)}\n                        style={replyInputStyle}\n                        placeholder=\"Write a reply...\"\n                        value={replyInputs[r._id] || ''}\n                        onChange={e => setReplyInputs(i => ({ ...i, [r._id]: e.target.value }))}\n                      />\n                      <button\n                        style={{ background: '#1db954', color: 'white', border: 'none', borderRadius: '6px', padding: '0.3rem 1rem', cursor: 'pointer', marginTop: '0.2rem' }}\n                        onClick={() => handleAddReply(r._id, comment._id)}\n                        disabled={replying[r._id]}\n                      >\n                        {replying[r._id] ? 'Replying...' : 'Reply'}\n                      </button>\n                    </div>\n                  )}\n                  {/* All descendants, flat, at the same indentation under this reply */}\n                  {r.descendants && r.descendants.length > 0 && (\n                    r.descendants.map(desc => (\n                      <div key={desc._id} style={{ marginBottom: '0.7rem', marginLeft: '1.5rem', borderLeft: '2px solid #444', paddingLeft: '0.7rem' }}>\n                        {/* Descendants: indented one more level */}\n                        <b style={{ color: '#1db954' }}>{desc.user?.name || 'User'}</b>\n                        <div style={{ color: '#fff' }}>{renderReplyText(desc.text)}</div>\n                        <button\n                          style={{ background: 'none', color: '#1e90ff', border: 'none', cursor: 'pointer', fontSize: '0.92em', marginLeft: '0.5rem' }}\n                          onClick={() => handleReplyToReply(comment._id, desc._id, desc.user?.name || 'User')}\n                        >\n                          Reply\n                        </button>\n                        {activeReplyInputId === desc._id && (\n                          <div style={{ marginLeft: '1.2rem', marginTop: '0.5rem' }}>\n                            <textarea\n                              ref={el => (replyInputRefs.current[desc._id] = el)}\n                              style={replyInputStyle}\n                              placeholder=\"Write a reply...\"\n                              value={replyInputs[desc._id] || ''}\n                              onChange={e => setReplyInputs(i => ({ ...i, [desc._id]: e.target.value }))}\n                            />\n                            <button\n                              style={{ background: '#1db954', color: 'white', border: 'none', borderRadius: '6px', padding: '0.3rem 1rem', cursor: 'pointer', marginTop: '0.2rem' }}\n                              onClick={() => handleAddReply(desc._id, comment._id)}\n                              disabled={replying[desc._id]}\n                            >\n                              {replying[desc._id] ? 'Replying...' : 'Reply'}\n                            </button>\n                          </div>\n                        )}\n                      </div>\n                    ))\n                  )}\n                </div>\n              ))\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  if (!open) return null;\n\n  function handleOverlayClick(e) {\n    if (drawerRef.current && !drawerRef.current.contains(e.target)) {\n      onClose();\n    }\n  }\n\n  return (\n    <div style={overlayStyle} onMouseDown={handleOverlayClick}>\n      <div style={drawerRef ? drawerStyle : {}} ref={drawerRef} onMouseDown={e => e.stopPropagation()}>\n        <div style={headerStyle}>\n          <span><b>Comments</b> — {track?.title}</span>\n          <button onClick={onClose} style={closeBtnStyle} aria-label=\"Close\">×</button>\n        </div>\n        <div style={commentsListStyle}>\n          {loading ? <p style={{ color: '#aaa' }}>Loading...</p> : null}\n          {!loading && comments.length === 0 ? (\n            <p style={{ color: '#aaa' }}>No comments yet. Be the first to comment!</p>\n          ) : (\n            comments.map(comment => renderFlatReplies(comment))\n          )}\n        </div>\n        <div style={inputSectionStyle}>\n          <textarea\n            placeholder=\"Write your comment...\"\n            style={{ width: '100%', minHeight: '60px', borderRadius: '6px', padding: '0.5rem', border: '1px solid #444', background: '#181818', color: 'white', resize: 'vertical' }}\n            value={newComment}\n            onChange={e => setNewComment(e.target.value)}\n          />\n          <button\n            style={{ background: '#1db954', color: 'white', border: 'none', borderRadius: '6px', padding: '0.5rem 1.2rem', cursor: 'pointer', alignSelf: 'flex-end' }}\n            onClick={handleAddComment}\n            disabled={loading}\n          >\n            {loading ? 'Commenting...' : 'Comment'}\n          </button>\n        </div>\n      <style>{`\n        @keyframes slideInRight {\n          from { transform: translateX(100%); }\n          to { transform: translateX(0); }\n        }\n      `}</style>\n      </div>\n    </div>\n  );\n}\n\nexport default CommentOverlay; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}