{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maali\\\\OneDrive\\\\Desktop\\\\MUSIC\\\\frontend\\\\src\\\\components\\\\TrackList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { useTrack } from '../context/TrackContext';\nimport { useSearchFilter } from '../context/SearchFilterContext';\nimport TrackCard from './TrackCard';\nimport CommentOverlay from './CommentOverlay';\nimport FilterBar from './FilterBar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TrackList = /*#__PURE__*/_s(/*#__PURE__*/React.memo(_c = _s(function TrackList({\n  page,\n  setPage,\n  totalPages,\n  setTotalPages,\n  total,\n  setTotal,\n  hasSubscription,\n  subscriptionDetails\n}) {\n  _s();\n  const {\n    searchQuery,\n    selectedGenre,\n    selectedArtist,\n    setSearchQuery,\n    setSelectedGenre,\n    setSelectedArtist\n  } = useSearchFilter();\n  const [tracks, setTracks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const {\n    selectedTrack,\n    setSelectedTrack\n  } = useTrack();\n  const [commentOverlayOpen, setCommentOverlayOpen] = useState(false);\n  const [commentTrack, setCommentTrack] = useState(null);\n  const [allArtists, setAllArtists] = useState([]);\n  const [allGenres, setAllGenres] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/publicTracks/artists').then(res => setAllArtists(res.data.artists));\n    axios.get('http://localhost:5000/api/publicTracks/genres').then(res => setAllGenres(res.data.genres));\n  }, []);\n\n  // Reset to page 1 on filter/search change\n  useEffect(() => {\n    setPage(1);\n    // eslint-disable-next-line\n  }, [searchQuery, selectedGenre, selectedArtist]);\n\n  // Fetch tracks when page or filters/search change\n  useEffect(() => {\n    const fetchTracks = async () => {\n      setLoading(true);\n      try {\n        const params = {\n          page,\n          limit: 20\n        };\n        if (searchQuery) params.q = searchQuery;\n        if (selectedGenre) params.genre = selectedGenre;\n        if (selectedArtist) params.artist = selectedArtist;\n        const response = await axios.get('http://localhost:5000/api/publicTracks/approved', {\n          params\n        });\n        setTracks(response.data.tracks);\n        setTotalPages(response.data.totalPages);\n        setTotal(response.data.total);\n        setLoading(false);\n      } catch (err) {\n        setError('Failed to load tracks. Please try again later.');\n        setLoading(false);\n      }\n    };\n    fetchTracks();\n    // eslint-disable-next-line\n  }, [page, searchQuery, selectedGenre, selectedArtist]);\n\n  // Clear all filters\n  const handleClearFilters = () => {\n    setSelectedArtist('');\n    setSelectedGenre('');\n    setSearchQuery('');\n  };\n\n  // Play logic (memoized)\n  const handlePlay = useCallback(track => {\n    if (!hasSubscription) {\n      if ((subscriptionDetails === null || subscriptionDetails === void 0 ? void 0 : subscriptionDetails.status) === 'cancelled') {\n        alert('Your subscription has ended. Please resubscribe to continue streaming music.');\n      } else {\n        alert('Please subscribe to stream music');\n      }\n      return;\n    }\n    setSelectedTrack(track);\n  }, [hasSubscription, subscriptionDetails, setSelectedTrack]);\n  const handleOpenComments = useCallback(track => {\n    setCommentTrack(track);\n    setCommentOverlayOpen(true);\n  }, []);\n  const handleCloseComments = useCallback(() => {\n    setCommentOverlayOpen(false);\n    setCommentTrack(null);\n  }, []);\n\n  // Determine if filters should be shown based on searchQuery\n  const showFilters = !!searchQuery;\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showFilters && /*#__PURE__*/_jsxDEV(FilterBar, {\n      uniqueArtists: allArtists,\n      uniqueGenres: allGenres,\n      selectedArtist: selectedArtist,\n      setSelectedArtist: setSelectedArtist,\n      selectedGenre: selectedGenre,\n      setSelectedGenre: setSelectedGenre,\n      handleClearFilters: handleClearFilters,\n      resultsCount: tracks.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tracks-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tracks-grid\",\n        children: tracks.map(track => /*#__PURE__*/_jsxDEV(TrackCard, {\n          track: track,\n          isSelected: (selectedTrack === null || selectedTrack === void 0 ? void 0 : selectedTrack._id) === track._id,\n          onSelect: handlePlay,\n          onOpenComments: handleOpenComments\n        }, track._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CommentOverlay, {\n        open: commentOverlayOpen,\n        onClose: handleCloseComments,\n        track: commentTrack,\n        allTracks: tracks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}, \"Sa5FT4AZBpXnG6z71D6bUBVueYM=\", false, function () {\n  return [useSearchFilter, useTrack];\n})), \"Sa5FT4AZBpXnG6z71D6bUBVueYM=\", false, function () {\n  return [useSearchFilter, useTrack];\n});\n_c2 = TrackList;\nexport default TrackList;\nvar _c, _c2;\n$RefreshReg$(_c, \"TrackList$React.memo\");\n$RefreshReg$(_c2, \"TrackList\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","axios","useTrack","useSearchFilter","TrackCard","CommentOverlay","FilterBar","jsxDEV","_jsxDEV","Fragment","_Fragment","TrackList","_s","memo","_c","page","setPage","totalPages","setTotalPages","total","setTotal","hasSubscription","subscriptionDetails","searchQuery","selectedGenre","selectedArtist","setSearchQuery","setSelectedGenre","setSelectedArtist","tracks","setTracks","loading","setLoading","error","setError","selectedTrack","setSelectedTrack","commentOverlayOpen","setCommentOverlayOpen","commentTrack","setCommentTrack","allArtists","setAllArtists","allGenres","setAllGenres","get","then","res","data","artists","genres","fetchTracks","params","limit","q","genre","artist","response","err","handleClearFilters","handlePlay","track","status","alert","handleOpenComments","handleCloseComments","showFilters","children","fileName","_jsxFileName","lineNumber","columnNumber","className","uniqueArtists","uniqueGenres","resultsCount","length","map","isSelected","_id","onSelect","onOpenComments","open","onClose","allTracks","_c2","$RefreshReg$"],"sources":["C:/Users/maali/OneDrive/Desktop/MUSIC/frontend/src/components/TrackList.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { useTrack } from '../context/TrackContext';\r\nimport { useSearchFilter } from '../context/SearchFilterContext';\r\nimport TrackCard from './TrackCard';\r\nimport CommentOverlay from './CommentOverlay';\r\nimport FilterBar from './FilterBar';\r\n\r\nconst TrackList = React.memo(function TrackList({ page, setPage, totalPages, setTotalPages, total, setTotal, hasSubscription, subscriptionDetails }) {\r\n  const { searchQuery, selectedGenre, selectedArtist, setSearchQuery, setSelectedGenre, setSelectedArtist } = useSearchFilter();\r\n  const [tracks, setTracks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const { selectedTrack, setSelectedTrack } = useTrack();\r\n  const [commentOverlayOpen, setCommentOverlayOpen] = useState(false);\r\n  const [commentTrack, setCommentTrack] = useState(null);\r\n  const [allArtists, setAllArtists] = useState([]);\r\n  const [allGenres, setAllGenres] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/api/publicTracks/artists').then(res => setAllArtists(res.data.artists));\r\n    axios.get('http://localhost:5000/api/publicTracks/genres').then(res => setAllGenres(res.data.genres));\r\n  }, []);\r\n\r\n  // Reset to page 1 on filter/search change\r\n  useEffect(() => {\r\n    setPage(1);\r\n    // eslint-disable-next-line\r\n  }, [searchQuery, selectedGenre, selectedArtist]);\r\n\r\n  // Fetch tracks when page or filters/search change\r\n  useEffect(() => {\r\n    const fetchTracks = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const params = { page, limit: 20 };\r\n        if (searchQuery) params.q = searchQuery;\r\n        if (selectedGenre) params.genre = selectedGenre;\r\n        if (selectedArtist) params.artist = selectedArtist;\r\n        const response = await axios.get('http://localhost:5000/api/publicTracks/approved', { params });\r\n        setTracks(response.data.tracks);\r\n        setTotalPages(response.data.totalPages);\r\n        setTotal(response.data.total);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError('Failed to load tracks. Please try again later.');\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchTracks();\r\n    // eslint-disable-next-line\r\n  }, [page, searchQuery, selectedGenre, selectedArtist]);\r\n\r\n  // Clear all filters\r\n  const handleClearFilters = () => {\r\n    setSelectedArtist('');\r\n    setSelectedGenre('');\r\n    setSearchQuery('');\r\n  };\r\n\r\n  // Play logic (memoized)\r\n  const handlePlay = useCallback((track) => {\r\n    if (!hasSubscription) {\r\n      if (subscriptionDetails?.status === 'cancelled') {\r\n        alert('Your subscription has ended. Please resubscribe to continue streaming music.');\r\n      } else {\r\n        alert('Please subscribe to stream music');\r\n      }\r\n      return;\r\n    }\r\n    setSelectedTrack(track);\r\n  }, [hasSubscription, subscriptionDetails, setSelectedTrack]);\r\n\r\n  const handleOpenComments = useCallback((track) => {\r\n    setCommentTrack(track);\r\n    setCommentOverlayOpen(true);\r\n  }, []);\r\n\r\n  const handleCloseComments = useCallback(() => {\r\n    setCommentOverlayOpen(false);\r\n    setCommentTrack(null);\r\n  }, []);\r\n\r\n  // Determine if filters should be shown based on searchQuery\r\n  const showFilters = !!searchQuery;\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div className=\"error\">{error}</div>;\r\n\r\n  return (\r\n    <>\r\n      {showFilters && (\r\n        <FilterBar\r\n          uniqueArtists={allArtists}\r\n          uniqueGenres={allGenres}\r\n          selectedArtist={selectedArtist}\r\n          setSelectedArtist={setSelectedArtist}\r\n          selectedGenre={selectedGenre}\r\n          setSelectedGenre={setSelectedGenre}\r\n          handleClearFilters={handleClearFilters}\r\n          resultsCount={tracks.length}\r\n        />\r\n      )}\r\n      <div className=\"tracks-section\">\r\n        {/* Track Cards */}\r\n        <div className=\"tracks-grid\">\r\n          {tracks.map((track) => (\r\n            <TrackCard\r\n              key={track._id}\r\n              track={track}\r\n              isSelected={selectedTrack?._id === track._id}\r\n              onSelect={handlePlay}\r\n              onOpenComments={handleOpenComments}\r\n            />\r\n          ))}\r\n        </div>\r\n        <CommentOverlay open={commentOverlayOpen} onClose={handleCloseComments} track={commentTrack} allTracks={tracks} />\r\n      </div>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default TrackList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}