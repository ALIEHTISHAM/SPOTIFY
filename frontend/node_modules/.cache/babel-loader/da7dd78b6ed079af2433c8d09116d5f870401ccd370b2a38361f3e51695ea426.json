{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maali\\\\OneDrive\\\\Desktop\\\\MUSIC\\\\frontend\\\\src\\\\components\\\\AudioPlayer.js\",\n  _s = $RefreshSig$();\n/**\r\n * AudioPlayer component\r\n * ---------------------\r\n * Handles all audio playback logic and state locally.\r\n * Memoized with React.memo to prevent unnecessary re-renders.\r\n * [Optimization] Playback state is now fully internal.\r\n * Only re-renders on track change, not on play/pause/seek.\r\n */\nimport React, { useRef, useState, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioPlayer = /*#__PURE__*/_s(/*#__PURE__*/React.memo(_c = _s(function AudioPlayer({\n  track,\n  initialVolume = 1\n}) {\n  var _track$artist;\n  _s();\n  // --- RENDER OPTIMIZATION ---\n  // isPlaying and all playback logic are internal.\n  // This prevents parent re-renders on play/pause/seek.\n  const audioRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [volume, setVolume] = useState(initialVolume);\n  const prevTrackId = useRef(null);\n\n  // --- RENDER OPTIMIZATION ---\n  // When track changes, reset state and auto-play.\n  // This ensures AudioPlayer only re-renders on track change.\n  useEffect(() => {\n    if (!track) return;\n    if (prevTrackId.current !== track._id) {\n      setIsPlaying(true);\n      setCurrentTime(0);\n      prevTrackId.current = track._id;\n    }\n  }, [track]);\n  useEffect(() => {\n    if (!audioRef.current) return;\n    if (isPlaying) {\n      audioRef.current.play();\n    } else {\n      audioRef.current.pause();\n    }\n  }, [isPlaying, track]);\n  const handleLoadedMetadata = useCallback(() => {\n    setDuration(audioRef.current.duration);\n  }, []);\n  const handleTimeUpdate = useCallback(() => {\n    setCurrentTime(audioRef.current.currentTime);\n  }, []);\n  const handleSeek = useCallback(e => {\n    const time = Number(e.target.value);\n    audioRef.current.currentTime = time;\n    setCurrentTime(time);\n  }, []);\n  const handleVolumeChange = useCallback(e => {\n    const vol = Number(e.target.value);\n    setVolume(vol);\n    audioRef.current.volume = vol;\n  }, []);\n  const handleEnded = useCallback(() => {\n    setIsPlaying(false);\n  }, []);\n  const handlePlayPause = useCallback(() => {\n    setIsPlaying(prev => !prev);\n  }, []);\n  const formatTime = time => {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n  if (!track) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"music-player\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track-cover-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: track.coverImage ? `http://localhost:5000/${track.coverImage}` : '',\n          alt: track.title,\n          className: \"track-cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: track.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: ((_track$artist = track.artist) === null || _track$artist === void 0 ? void 0 : _track$artist.name) || 'Unknown Artist'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"volume-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"volume-icon\",\n        children: \"\\uD83D\\uDD0A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: \"1\",\n        step: \"0.01\",\n        value: volume,\n        onChange: handleVolumeChange,\n        className: \"volume-slider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-buttons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-button play-pause\",\n          onClick: handlePlayPause,\n          children: isPlaying ? '❚❚' : '▶'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"time-info\",\n          children: [\"`\", formatTime(currentTime), \"/\", formatTime(duration), \"`\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: duration || 0,\n          value: currentTime,\n          onChange: handleSeek,\n          className: \"progress-slider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: track.audioUrl,\n      onLoadedMetadata: handleLoadedMetadata,\n      onTimeUpdate: handleTimeUpdate,\n      onEnded: handleEnded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}, \"/7FcSzUPphU6hvEWrNS2ekCgSFs=\")), \"/7FcSzUPphU6hvEWrNS2ekCgSFs=\");\n_c2 = AudioPlayer;\nexport default AudioPlayer;\nvar _c, _c2;\n$RefreshReg$(_c, \"AudioPlayer$React.memo\");\n$RefreshReg$(_c2, \"AudioPlayer\");","map":{"version":3,"names":["React","useRef","useState","useEffect","useCallback","jsxDEV","_jsxDEV","AudioPlayer","_s","memo","_c","track","initialVolume","_track$artist","audioRef","isPlaying","setIsPlaying","currentTime","setCurrentTime","duration","setDuration","volume","setVolume","prevTrackId","current","_id","play","pause","handleLoadedMetadata","handleTimeUpdate","handleSeek","e","time","Number","target","value","handleVolumeChange","vol","handleEnded","handlePlayPause","prev","formatTime","minutes","Math","floor","seconds","toString","padStart","className","children","src","coverImage","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","artist","name","type","min","max","step","onChange","onClick","ref","audioUrl","onLoadedMetadata","onTimeUpdate","onEnded","_c2","$RefreshReg$"],"sources":["C:/Users/maali/OneDrive/Desktop/MUSIC/frontend/src/components/AudioPlayer.js"],"sourcesContent":["/**\r\n * AudioPlayer component\r\n * ---------------------\r\n * Handles all audio playback logic and state locally.\r\n * Memoized with React.memo to prevent unnecessary re-renders.\r\n * [Optimization] Playback state is now fully internal.\r\n * Only re-renders on track change, not on play/pause/seek.\r\n */\r\nimport React, { useRef, useState, useEffect, useCallback } from 'react';\r\n\r\nconst AudioPlayer = React.memo(function AudioPlayer({\r\n  track,\r\n  initialVolume = 1\r\n}) {\r\n  // --- RENDER OPTIMIZATION ---\r\n  // isPlaying and all playback logic are internal.\r\n  // This prevents parent re-renders on play/pause/seek.\r\n  const audioRef = useRef(null);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const [duration, setDuration] = useState(0);\r\n  const [volume, setVolume] = useState(initialVolume);\r\n  const prevTrackId = useRef(null);\r\n\r\n  // --- RENDER OPTIMIZATION ---\r\n  // When track changes, reset state and auto-play.\r\n  // This ensures AudioPlayer only re-renders on track change.\r\n  useEffect(() => {\r\n    if (!track) return;\r\n    if (prevTrackId.current !== track._id) {\r\n      setIsPlaying(true);\r\n      setCurrentTime(0);\r\n      prevTrackId.current = track._id;\r\n    }\r\n  }, [track]);\r\n\r\n  useEffect(() => {\r\n    if (!audioRef.current) return;\r\n    if (isPlaying) {\r\n      audioRef.current.play();\r\n    } else {\r\n      audioRef.current.pause();\r\n    }\r\n  }, [isPlaying, track]);\r\n\r\n  const handleLoadedMetadata = useCallback(() => {\r\n    setDuration(audioRef.current.duration);\r\n  }, []);\r\n\r\n  const handleTimeUpdate = useCallback(() => {\r\n    setCurrentTime(audioRef.current.currentTime);\r\n  }, []);\r\n\r\n  const handleSeek = useCallback((e) => {\r\n    const time = Number(e.target.value);\r\n    audioRef.current.currentTime = time;\r\n    setCurrentTime(time);\r\n  }, []);\r\n\r\n  const handleVolumeChange = useCallback((e) => {\r\n    const vol = Number(e.target.value);\r\n    setVolume(vol);\r\n    audioRef.current.volume = vol;\r\n  }, []);\r\n\r\n  const handleEnded = useCallback(() => {\r\n    setIsPlaying(false);\r\n  }, []);\r\n\r\n  const handlePlayPause = useCallback(() => {\r\n    setIsPlaying((prev) => !prev);\r\n  }, []);\r\n\r\n  const formatTime = (time) => {\r\n    const minutes = Math.floor(time / 60);\r\n    const seconds = Math.floor(time % 60);\r\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  if (!track) return null;\r\n\r\n  return (\r\n    <div className=\"music-player\">\r\n      {/* --- RENDER OPTIMIZATION ---\r\n          All playback controls and state are internal to AudioPlayer. */}\r\n      <div className=\"player-info\">\r\n        <div className=\"track-cover-container\">\r\n          <img\r\n            src={track.coverImage ? `http://localhost:5000/${track.coverImage}` : ''}\r\n            alt={track.title}\r\n            className=\"track-cover\"\r\n          />\r\n        </div>\r\n        <div className=\"track-details\">\r\n          <h3>{track.title}</h3>\r\n          <p>{track.artist?.name || 'Unknown Artist'}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"volume-controls\">\r\n        <span className=\"volume-icon\">🔊</span>\r\n        <input\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max=\"1\"\r\n          step=\"0.01\"\r\n          value={volume}\r\n          onChange={handleVolumeChange}\r\n          className=\"volume-slider\"\r\n        />\r\n      </div>\r\n      <div className=\"player-controls\">\r\n        <div className=\"control-buttons\">\r\n          <button className=\"control-button play-pause\" onClick={handlePlayPause}>\r\n            {isPlaying ? '❚❚' : '▶'}\r\n          </button>\r\n        </div>\r\n        <div className=\"progress-bar\">\r\n          <span className=\"time-info\">`{formatTime(currentTime)}/{formatTime(duration)}`</span>\r\n          \r\n          <input\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max={duration || 0}\r\n            value={currentTime}\r\n            onChange={handleSeek}\r\n            className=\"progress-slider\"\r\n          />\r\n         \r\n        </div>\r\n      </div>\r\n      <audio\r\n        ref={audioRef}\r\n        src={track.audioUrl}\r\n        onLoadedMetadata={handleLoadedMetadata}\r\n        onTimeUpdate={handleTimeUpdate}\r\n        onEnded={handleEnded}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default AudioPlayer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}