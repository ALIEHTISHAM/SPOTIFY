{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maali\\\\OneDrive\\\\Desktop\\\\MUSIC\\\\frontend\\\\src\\\\components\\\\CancelSubscription.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useSubscription } from '../context/SubscriptionContext';\nimport { useAuth } from '../context/AuthContext';\nimport '../styles/CancelSubscription.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CancelSubscription = () => {\n  _s();\n  const {\n    hasSubscription,\n    loading,\n    cancelSubscription,\n    subscriptionDetails\n  } = useSubscription();\n  const {\n    user\n  } = useAuth();\n  useEffect(() => {}, [hasSubscription, loading, user, subscriptionDetails]);\n\n  // Add detailed logs for rendering conditions\n  useEffect(() => {}, [loading, subscriptionDetails]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cancel-subscription-loading\",\n      children: \"Loading subscription status...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Function to format date\n  const formatDate = dateString => {\n    if (!dateString) return 'N/A';\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  // Render logic based on subscription details from backend\n  // Check if we should render null (no subscription details or cancelled and access ended)\n  if (!subscriptionDetails || subscriptionDetails.status === 'cancelled' && !subscriptionDetails.hasSubscription) {\n    return null;\n  }\n\n  // Check if we should show the cancelled message (cancelled in DB AND still has access)\n  if (subscriptionDetails.status === 'cancelled' && subscriptionDetails.hasSubscription) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cancel-subscription\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Subscription Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"cancel-note\",\n        children: [\"Your subscription is set to cancel on \", formatDate(subscriptionDetails.currentPeriodEnd), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Check if we should show the cancel button (active in DB AND still has access)\n  if (subscriptionDetails.status === 'active' && subscriptionDetails.hasSubscription) {\n    const handleCancel = async () => {\n      try {\n        const result = await cancelSubscription();\n        if (result.success) {\n          alert('Your subscription will be cancelled at the end of the billing period.');\n        } else {\n          alert(result.message || 'Failed to cancel subscription. Please try again.');\n        }\n      } catch (error) {\n        alert('An error occurred while cancelling your subscription. Please try again.');\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cancel-subscription\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Subscription Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cancel-button\",\n        onClick: handleCancel,\n        children: \"Cancel Subscription\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"cancel-note\",\n        children: \"Your subscription will remain active until the end of the current billing period.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Fallback: Should theoretically not be reached if logic covers all states, but included for safety\n  return null;\n};\n_s(CancelSubscription, \"FHHJ/+GdWKQWSqJYx4AMWo17/9c=\", false, function () {\n  return [useSubscription, useAuth];\n});\n_c = CancelSubscription;\nexport default CancelSubscription;\nvar _c;\n$RefreshReg$(_c, \"CancelSubscription\");","map":{"version":3,"names":["React","useEffect","useSubscription","useAuth","jsxDEV","_jsxDEV","CancelSubscription","_s","hasSubscription","loading","cancelSubscription","subscriptionDetails","user","className","children","fileName","_jsxFileName","lineNumber","columnNumber","formatDate","dateString","options","year","month","day","Date","toLocaleDateString","undefined","status","currentPeriodEnd","handleCancel","result","success","alert","message","error","onClick","_c","$RefreshReg$"],"sources":["C:/Users/maali/OneDrive/Desktop/MUSIC/frontend/src/components/CancelSubscription.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useSubscription } from '../context/SubscriptionContext';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport '../styles/CancelSubscription.css';\r\n\r\nconst CancelSubscription = () => {\r\n  const { hasSubscription, loading, cancelSubscription, subscriptionDetails } = useSubscription();\r\n  const { user } = useAuth();\r\n\r\n  useEffect(() => {\r\n  }, [hasSubscription, loading, user, subscriptionDetails]);\r\n\r\n  // Add detailed logs for rendering conditions\r\n  useEffect(() => {\r\n  }, [loading, subscriptionDetails]);\r\n\r\n  if (loading) {\r\n    return <div className=\"cancel-subscription-loading\">Loading subscription status...</div>;\r\n  }\r\n\r\n  // Function to format date\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return 'N/A';\r\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n    return new Date(dateString).toLocaleDateString(undefined, options);\r\n  };\r\n\r\n  // Render logic based on subscription details from backend\r\n  // Check if we should render null (no subscription details or cancelled and access ended)\r\n  if (!subscriptionDetails || (subscriptionDetails.status === 'cancelled' && !subscriptionDetails.hasSubscription)) {\r\n     return null;\r\n  }\r\n\r\n  // Check if we should show the cancelled message (cancelled in DB AND still has access)\r\n  if (subscriptionDetails.status === 'cancelled' && subscriptionDetails.hasSubscription) {\r\n    return (\r\n      <div className=\"cancel-subscription\">\r\n        <h3>Subscription Management</h3>\r\n        <p className=\"cancel-note\">\r\n          Your subscription is set to cancel on {formatDate(subscriptionDetails.currentPeriodEnd)}.\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Check if we should show the cancel button (active in DB AND still has access)\r\n  if (subscriptionDetails.status === 'active' && subscriptionDetails.hasSubscription) {\r\n     const handleCancel = async () => {\r\n      try {\r\n        const result = await cancelSubscription();\r\n        if (result.success) {\r\n          alert('Your subscription will be cancelled at the end of the billing period.');\r\n        } else {\r\n          alert(result.message || 'Failed to cancel subscription. Please try again.');\r\n        }\r\n      } catch (error) {\r\n        alert('An error occurred while cancelling your subscription. Please try again.');\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className=\"cancel-subscription\">\r\n        <h3>Subscription Management</h3>\r\n        <button \r\n          className=\"cancel-button\"\r\n          onClick={handleCancel}\r\n        >\r\n          Cancel Subscription\r\n        </button>\r\n        <p className=\"cancel-note\">\r\n          Your subscription will remain active until the end of the current billing period.\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Fallback: Should theoretically not be reached if logic covers all states, but included for safety\r\n   return null;\r\n};\r\n\r\nexport default CancelSubscription; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}