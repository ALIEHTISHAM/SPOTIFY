{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maali\\\\OneDrive\\\\Desktop\\\\MUSIC\\\\frontend\\\\src\\\\components\\\\TrackList.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useTrack } from '../context/TrackContext';\nimport { useSearchFilter } from '../context/SearchFilterContext';\nimport TrackCard from './TrackCard';\nimport CommentOverlay from './CommentOverlay';\nimport FilterBar from './FilterBar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TrackList = /*#__PURE__*/_s(/*#__PURE__*/React.memo(_c = _s(function TrackList({\n  hasSubscription,\n  subscriptionDetails,\n  page,\n  setPage,\n  totalPages,\n  setTotalPages,\n  total,\n  setTotal\n}) {\n  _s();\n  console.log('rendering tracklist');\n  const {\n    selectedTrack,\n    setSelectedTrack\n  } = useTrack();\n  const {\n    searchQuery,\n    setSearchQuery,\n    selectedGenre,\n    setSelectedGenre,\n    selectedArtist,\n    setSelectedArtist\n  } = useSearchFilter();\n  const [tracks, setTracks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [commentOverlayOpen, setCommentOverlayOpen] = React.useState(false);\n  const [commentTrack, setCommentTrack] = React.useState(null);\n\n  // Fetch tracks from backend when page or filters/search change\n  useEffect(() => {\n    const fetchTracks = async () => {\n      setLoading(true);\n      try {\n        const params = {\n          page,\n          limit: 20\n        };\n        if (searchQuery) params.q = searchQuery;\n        if (selectedGenre) params.genre = selectedGenre;\n        if (selectedArtist) params.artist = selectedArtist;\n        const response = await axios.get('http://localhost:5000/api/publicTracks/approved', {\n          params\n        });\n        setTracks(response.data.tracks);\n        setTotalPages(response.data.totalPages);\n        setTotal(response.data.total);\n        setLoading(false);\n      } catch (err) {\n        setError('Failed to load tracks. Please try again later.');\n        setLoading(false);\n      }\n    };\n    fetchTracks();\n    // eslint-disable-next-line\n  }, [page, searchQuery, selectedGenre, selectedArtist]);\n\n  // Reset to page 1 when filters/search change\n  useEffect(() => {\n    setPage(1);\n    // eslint-disable-next-line\n  }, [searchQuery, selectedGenre, selectedArtist]);\n\n  // Get unique genres and artists for filter dropdowns\n  const uniqueGenres = [...new Set(tracks.map(track => track.genre))];\n  const uniqueArtists = [...new Set(tracks.map(track => {\n    var _track$artist;\n    return (_track$artist = track.artist) === null || _track$artist === void 0 ? void 0 : _track$artist.name;\n  }).filter(Boolean))];\n\n  // Clear all filters\n  const handleClearFilters = () => {\n    setSelectedArtist('');\n    setSelectedGenre('');\n    setSearchQuery('');\n  };\n\n  // Play logic (memoized)\n  const handlePlay = useCallback(track => {\n    if (!hasSubscription) {\n      if ((subscriptionDetails === null || subscriptionDetails === void 0 ? void 0 : subscriptionDetails.status) === 'cancelled') {\n        alert('Your subscription has ended. Please resubscribe to continue streaming music.');\n      } else {\n        alert('Please subscribe to stream music');\n      }\n      return;\n    }\n    setSelectedTrack(track);\n  }, [hasSubscription, subscriptionDetails, setSelectedTrack]);\n  const handleOpenComments = React.useCallback(track => {\n    setCommentTrack(track);\n    setCommentOverlayOpen(true);\n  }, []);\n  const handleCloseComments = React.useCallback(() => {\n    setCommentOverlayOpen(false);\n    setCommentTrack(null);\n  }, []);\n\n  // Determine if filters should be shown based on searchQuery\n  const showFilters = !!searchQuery;\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showFilters && /*#__PURE__*/_jsxDEV(FilterBar, {\n      uniqueArtists: uniqueArtists,\n      uniqueGenres: uniqueGenres,\n      selectedArtist: selectedArtist,\n      setSelectedArtist: setSelectedArtist,\n      selectedGenre: selectedGenre,\n      setSelectedGenre: setSelectedGenre,\n      handleClearFilters: handleClearFilters,\n      resultsCount: tracks.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tracks-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tracks-grid\",\n        children: tracks.map(track => /*#__PURE__*/_jsxDEV(TrackCard, {\n          track: track,\n          isSelected: (selectedTrack === null || selectedTrack === void 0 ? void 0 : selectedTrack._id) === track._id,\n          onSelect: handlePlay,\n          onOpenComments: handleOpenComments\n        }, track._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CommentOverlay, {\n        open: commentOverlayOpen,\n        onClose: handleCloseComments,\n        track: commentTrack,\n        allTracks: tracks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}, \"JtC0K12+RgIQ/80SgTH6aQ8gRp4=\", false, function () {\n  return [useTrack, useSearchFilter];\n})), \"JtC0K12+RgIQ/80SgTH6aQ8gRp4=\", false, function () {\n  return [useTrack, useSearchFilter];\n});\n_c2 = TrackList;\nexport default TrackList;\nvar _c, _c2;\n$RefreshReg$(_c, \"TrackList$React.memo\");\n$RefreshReg$(_c2, \"TrackList\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","axios","useTrack","useSearchFilter","TrackCard","CommentOverlay","FilterBar","jsxDEV","_jsxDEV","Fragment","_Fragment","TrackList","_s","memo","_c","hasSubscription","subscriptionDetails","page","setPage","totalPages","setTotalPages","total","setTotal","console","log","selectedTrack","setSelectedTrack","searchQuery","setSearchQuery","selectedGenre","setSelectedGenre","selectedArtist","setSelectedArtist","tracks","setTracks","loading","setLoading","error","setError","commentOverlayOpen","setCommentOverlayOpen","commentTrack","setCommentTrack","fetchTracks","params","limit","q","genre","artist","response","get","data","err","uniqueGenres","Set","map","track","uniqueArtists","_track$artist","name","filter","Boolean","handleClearFilters","handlePlay","status","alert","handleOpenComments","handleCloseComments","showFilters","children","fileName","_jsxFileName","lineNumber","columnNumber","className","resultsCount","length","isSelected","_id","onSelect","onOpenComments","open","onClose","allTracks","_c2","$RefreshReg$"],"sources":["C:/Users/maali/OneDrive/Desktop/MUSIC/frontend/src/components/TrackList.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useTrack } from '../context/TrackContext';\r\nimport { useSearchFilter } from '../context/SearchFilterContext';\r\nimport TrackCard from './TrackCard';\r\nimport CommentOverlay from './CommentOverlay';\r\nimport FilterBar from './FilterBar';\r\n\r\nconst TrackList = React.memo(function TrackList({ hasSubscription, subscriptionDetails, page, setPage, totalPages, setTotalPages, total, setTotal }) {\r\n  console.log('rendering tracklist');\r\n\r\n  const { selectedTrack, setSelectedTrack } = useTrack();\r\n  const {\r\n    searchQuery,\r\n    setSearchQuery,\r\n    selectedGenre,\r\n    setSelectedGenre,\r\n    selectedArtist,\r\n    setSelectedArtist\r\n  } = useSearchFilter();\r\n\r\n  const [tracks, setTracks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [commentOverlayOpen, setCommentOverlayOpen] = React.useState(false);\r\n  const [commentTrack, setCommentTrack] = React.useState(null);\r\n\r\n  // Fetch tracks from backend when page or filters/search change\r\n  useEffect(() => {\r\n    const fetchTracks = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const params = {\r\n          page,\r\n          limit: 20,\r\n        };\r\n        if (searchQuery) params.q = searchQuery;\r\n        if (selectedGenre) params.genre = selectedGenre;\r\n        if (selectedArtist) params.artist = selectedArtist;\r\n        const response = await axios.get('http://localhost:5000/api/publicTracks/approved', { params });\r\n        setTracks(response.data.tracks);\r\n        setTotalPages(response.data.totalPages);\r\n        setTotal(response.data.total);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError('Failed to load tracks. Please try again later.');\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchTracks();\r\n    // eslint-disable-next-line\r\n  }, [page, searchQuery, selectedGenre, selectedArtist]);\r\n\r\n  // Reset to page 1 when filters/search change\r\n  useEffect(() => {\r\n    setPage(1);\r\n    // eslint-disable-next-line\r\n  }, [searchQuery, selectedGenre, selectedArtist]);\r\n\r\n  // Get unique genres and artists for filter dropdowns\r\n  const uniqueGenres = [...new Set(tracks.map(track => track.genre))];\r\n  const uniqueArtists = [...new Set(tracks.map(track => track.artist?.name).filter(Boolean))];\r\n\r\n  // Clear all filters\r\n  const handleClearFilters = () => {\r\n    setSelectedArtist('');\r\n    setSelectedGenre('');\r\n    setSearchQuery('');\r\n  };\r\n\r\n  // Play logic (memoized)\r\n  const handlePlay = useCallback((track) => {\r\n    if (!hasSubscription) {\r\n      if (subscriptionDetails?.status === 'cancelled') {\r\n        alert('Your subscription has ended. Please resubscribe to continue streaming music.');\r\n      } else {\r\n        alert('Please subscribe to stream music');\r\n      }\r\n      return;\r\n    }\r\n    setSelectedTrack(track);\r\n  }, [hasSubscription, subscriptionDetails, setSelectedTrack]);\r\n\r\n  const handleOpenComments = React.useCallback((track) => {\r\n    setCommentTrack(track);\r\n    setCommentOverlayOpen(true);\r\n  }, []);\r\n\r\n  const handleCloseComments = React.useCallback(() => {\r\n    setCommentOverlayOpen(false);\r\n    setCommentTrack(null);\r\n  }, []);\r\n\r\n  // Determine if filters should be shown based on searchQuery\r\n  const showFilters = !!searchQuery;\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div className=\"error\">{error}</div>;\r\n\r\n  return (\r\n    <>\r\n      {showFilters && (\r\n        <FilterBar\r\n          uniqueArtists={uniqueArtists}\r\n          uniqueGenres={uniqueGenres}\r\n          selectedArtist={selectedArtist}\r\n          setSelectedArtist={setSelectedArtist}\r\n          selectedGenre={selectedGenre}\r\n          setSelectedGenre={setSelectedGenre}\r\n          handleClearFilters={handleClearFilters}\r\n          resultsCount={tracks.length}\r\n        />\r\n      )}\r\n      <div className=\"tracks-section\">\r\n        {/* Track Cards */}\r\n        <div className=\"tracks-grid\">\r\n          {tracks.map((track) => (\r\n            <TrackCard\r\n              key={track._id}\r\n              track={track}\r\n              isSelected={selectedTrack?._id === track._id}\r\n              onSelect={handlePlay}\r\n              onOpenComments={handleOpenComments}\r\n            />\r\n          ))}\r\n        </div>\r\n        <CommentOverlay open={commentOverlayOpen} onClose={handleCloseComments} track={commentTrack} allTracks={tracks} />\r\n      </div>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default TrackList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}